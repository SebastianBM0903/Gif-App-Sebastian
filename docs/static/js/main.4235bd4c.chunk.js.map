{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgrCategoria","setcategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBI,OACI,sBAAMC,SATQ,SAACC,GACnBA,EAAEC,iBACKJ,EAAWK,OAAOC,OAAO,IAE5BR,GAAe,SAAAS,GAAS,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAIlB,SAEI,uBAAOO,KAAK,OAAOC,MAAQT,EAC3BU,SAjBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG7B,OACA,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAG1B,ECL4B,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAM,SAAAC,GAECC,QAAQC,IAAIF,GAChBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAIGqB,EDpBoBO,CAAa5B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAOhB,OACJ,qCACQ,mCAAMpB,EAAN,OAECoB,GAAW,4CACZ,qBAAKJ,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aErBnBkB,EAAe,WAI5B,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQI,OACI,qCAEA,gDACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAGA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEAA,SAAWA,GADJA,Y,MCxB3B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4235bd4c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport propTypes from 'prop-types';\r\nexport const AgrCategoria = ({setcategorias}) => {\r\n\r\nconst [inputValue, setinputValue] = useState('');\r\n\r\n\r\nconst cambioinput = (e) =>{\r\n    setinputValue(e.target.value);\r\n}\r\n\r\n\r\n    const conSubmit = (e) =>{\r\n    e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n       \r\n        setcategorias( categoria => [ inputValue, ...categoria] );\r\n            setinputValue('');\r\n    }\r\n    }\r\n    return (\r\n        <form onSubmit={conSubmit} >\r\n            \r\n            <input type='text' value={ inputValue }\r\n            onChange={ cambioinput }\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\nAgrCategoria.propTypes = {\r\n    setcategorias: propTypes.func.isRequired\r\n    }","\r\n\r\n\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=amlKBjTssMAWvFl0T7OIotSSwtnrAufs`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=> {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n  \r\n        return (\r\n        <div className='pict animate__animated animate__backInLeft'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\nconst {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n<>\r\n        <h3> {category} </h3>\r\n\r\n        {loading && <p>Cargando...</p> }\r\n        <div className=\"pict-grid\">\r\n            \r\n            \r\n            {\r\n                    images.map(img =>(\r\n                       <GifGridItem\r\n                       key={img.id}\r\n                       {...img}\r\n                       />\r\n                    ))\r\n                    }\r\n            \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        getGifs(category)\r\n        .then( imgs=>{\r\n            \r\n                console.log(imgs) \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n\r\n    }, [category])\r\n\r\n    \r\n    \r\n    return state;\r\n    \r\n}\r\n","\r\nimport React, {useState} from 'react'\r\nimport { AgrCategoria } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['Itachi', 'Kakashi', 'Naruto']\r\n\r\nconst [categorias, setcategorias] = useState(['Itachi']);\r\n\r\n    //const agregar =() =>{\r\n\r\n       // setcategorias(categorias.concat('Manzana'))\r\n       // setcategorias( categoria => [ ...categoria, 'Sai'] );\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            \r\n        <h2>Gif Expert App</h2>\r\n        <AgrCategoria setcategorias={setcategorias}/>\r\n        <hr />\r\n\r\n        \r\n        <ol>\r\n            {\r\n                categorias.map( category =>(\r\n                    \r\n                    <GifGrid\r\n                    key = {category}\r\n                    category= {category} \r\n                    />\r\n\r\n\r\n                )\r\n                //<li key={category}>{category}</li>\r\n                )\r\n            }\r\n\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}